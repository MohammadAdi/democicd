name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: 🔧 Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.tag }}

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up .NET 8 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Set Docker Image Tag
      id: set_tag
      run: echo "tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/cicd-api:${{ steps.set_tag.outputs.tag }} .

    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/cicd-api:${{ steps.set_tag.outputs.tag }}

  deploy:
    name: 🚀 Deploy to Server (Manual Docker Run)
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: SSH & Run Docker Commands
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          IMAGE=${{ secrets.DOCKER_USERNAME }}/cicd-api:${{ needs.build.outputs.image_tag }}
          
          echo "Pulling image $IMAGE"
          docker pull $IMAGE

          echo "Stopping and removing existing container"
          docker stop cicd-api || true
          docker rm cicd-api || true

          echo "Running new container"
          docker run -d \
            --name cicd-api \
            -p 8080:8080 \
            -e ASPNETCORE_ENVIRONMENT=Production \
            $IMAGE
